export class Memory {
  private readonly memory = new Uint8Array(4096)
  // prettier-ignore
  private readonly fonts = [
    0xF0, 0x90, 0x90, 0x90, 0xF0, // 0
    0x20, 0x60, 0x20, 0x20, 0x70, // 1
    0xF0, 0x10, 0xF0, 0x80, 0xF0, // 2
    0xF0, 0x10, 0xF0, 0x10, 0xF0, // 3
    0x90, 0x90, 0xF0, 0x10, 0x10, // 4
    0xF0, 0x80, 0xF0, 0x10, 0xF0, // 5
    0xF0, 0x80, 0xF0, 0x90, 0xF0, // 6
    0xF0, 0x10, 0x20, 0x40, 0x40, // 7
    0xF0, 0x90, 0xF0, 0x90, 0xF0, // 8
    0xF0, 0x90, 0xF0, 0x10, 0xF0, // 9
    0xF0, 0x90, 0xF0, 0x90, 0x90, // A
    0xE0, 0x90, 0xE0, 0x90, 0xE0, // B
    0xF0, 0x80, 0x80, 0x80, 0xF0, // C
    0xE0, 0x90, 0x90, 0x90, 0xE0, // D
    0xF0, 0x80, 0xF0, 0x80, 0xF0, // E
    0xF0, 0x80, 0xF0, 0x80, 0x80  // F
  ];

  constructor() {
    this.writeFonts()
  }

  public reset() {
    this.memory.fill(0)
    this.writeFonts()
  }

  private writeFonts() {
    for (let i = 0; i < this.fonts.length; i++) {
      this.memory[i] = this.fonts[i]
    }
  }

  public read(address: number) {
    return this.memory[address]
  }

  public write(address: number, value: number) {
    this.memory[address] = value
  }

  public writeRom(rom: Uint8Array) {
    for (let i = 0; i < rom.length; i++) {
      this.write(0x200 + i, rom[i])
    }
  }
}
